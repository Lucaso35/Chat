/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;

import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.KeyStroke;

/**
 *
 * @author Tomas
 */
public class gui extends javax.swing.JFrame
{

    private TreeMap<String, String> contact;

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
        textareaMessage.getInputMap().put(KeyStroke.getKeyStroke("ENTER"), "doNothing");
        contact = new TreeMap<>();
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream("contacts.data"));
            contact = (TreeMap<String, String>) ois.readObject();
            ois.close();
        } catch (IOException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        }
        receiver receiver = new receiver(textareaMessages, this);
        receiver.start();
        reloadContactList();
    }

    private void reloadContactList() {
        DefaultListModel listModel = new DefaultListModel();
        for (String s : contact.keySet()) {
            listModel.addElement(s);
        }
        listContacts.setModel(listModel);
    }

    public void addContact(String name, String adress) {
        contact.put(name, adress);
        reloadContactList();
    }

    public String getAdressName(String hostAddress) {
        for (Map.Entry<String, String> entry : contact.entrySet()) {
            if (entry.getValue().equals(hostAddress)) {
                return entry.getKey();
            }
        }
        return hostAddress;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonAddContact = new javax.swing.JButton();
        buttonDeleteContact = new javax.swing.JButton();
        buttonSend = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listContacts = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        textareaMessage = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textareaMessages = new javax.swing.JTextArea();
        checkboxSendOnEnter = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        buttonAddContact.setText("PÅ™idat");
        buttonAddContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddContactActionPerformed(evt);
            }
        });

        buttonDeleteContact.setText("Odebrat");
        buttonDeleteContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteContactActionPerformed(evt);
            }
        });

        buttonSend.setText("Odeslat");
        buttonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendActionPerformed(evt);
            }
        });

        listContacts.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listContacts);

        textareaMessage.setColumns(20);
        textareaMessage.setRows(5);
        textareaMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textareaMessageKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(textareaMessage);

        jScrollPane3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        textareaMessages.setEditable(false);
        textareaMessages.setColumns(20);
        textareaMessages.setRows(5);
        jScrollPane3.setViewportView(textareaMessages);

        checkboxSendOnEnter.setSelected(true);
        checkboxSendOnEnter.setText("poslat pri stisknuti Enter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonAddContact, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonDeleteContact)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(checkboxSendOnEnter)
                        .addGap(18, 18, 18)
                        .addComponent(buttonSend))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddContact)
                    .addComponent(buttonDeleteContact)
                    .addComponent(buttonSend)
                    .addComponent(checkboxSendOnEnter))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddContactActionPerformed
        // TODO add your handling code here:
        newContact newContact1 = new newContact(this, rootPaneCheckingEnabled);
        newContact1.setVisible(true);
    }//GEN-LAST:event_buttonAddContactActionPerformed

    private void buttonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendActionPerformed
        // TODO add your handling code here:
        Socket sender;
        try {
            sender = new Socket(contact.get(listContacts.getSelectedValue()), 4321);

            PrintWriter pw = new PrintWriter(sender.getOutputStream(), true);
            pw.println(textareaMessage.getText());
            pw.flush();
            pw.close();

            textareaMessages.append("Vy:\n" + textareaMessage.getText() + "\n\n");
            textareaMessages.setCaretPosition(textareaMessages.getDocument().getLength());
            textareaMessage.setText(null);
            textareaMessage.moveCaretPosition(0);
        } catch (UnknownHostException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSendActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("contacts.data"));
            oos.writeObject(contact);
            oos.close();
        } catch (IOException e) {
        }
    }//GEN-LAST:event_formWindowClosing

    private void textareaMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textareaMessageKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && checkboxSendOnEnter.isSelected()) {
            buttonSendActionPerformed(null);
        }
    }//GEN-LAST:event_textareaMessageKeyPressed

    private void buttonDeleteContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteContactActionPerformed
        // TODO add your handling code here:
        contact.remove(listContacts.getSelectedValue());
        reloadContactList();
    }//GEN-LAST:event_buttonDeleteContactActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddContact;
    private javax.swing.JButton buttonDeleteContact;
    private javax.swing.JButton buttonSend;
    private javax.swing.JCheckBox checkboxSendOnEnter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listContacts;
    private javax.swing.JTextArea textareaMessage;
    private javax.swing.JTextArea textareaMessages;
    // End of variables declaration//GEN-END:variables
}
